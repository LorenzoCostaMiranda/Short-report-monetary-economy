View(Multiplicador_mon)
vetor_e <- SerieTemporal_e[[2]]
vetor_d <- SerieTemporal_d[[2]]
vetor_multiplicador <- Multiplicador_mon[[1]]
TabelaBacen <- TabelaBacen %>%
add_column(e = vetor_e, d = vetor_d, alpha = vetor_multiplicador, .after = "Reservas Bancarias")
### Criando um vetor para ser a coluna de tempo
dates <- seq.Date(from = as.Date("2003-01-01"), to = as.Date("2023-12-01"), by = "month")
#criando vetores para cada valor do MP, DV, ResBan, PPMP e BASE MONETARIA
vetormp <- TabelaMP[[2]]
vetordepavi <- TabelaDepAvi[[2]]
vetorresban <- TabelaResBan[[2]]
vetorPPMP <- TabelaPMPP[[2]]
vetorBASE <- TabelaBASE[[2]]
#formatando os vetores
vetor_mp <- format(vetormp, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_depavi <- format(vetordepavi, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_resban <- format(vetorresban, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_PPMP <- format(vetorPPMP, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_BASE <- format(vetorBASE, big.mark = ".", decimal.mark = ",", scientific = FALSE)
### juntando todas as variáveis em uma tabela só
TabelaBacen <- tibble(Data = dates, "Meios de Pagamentos" = vetor_mp,
"Depísitos à vista" = vetor_depavi, "PPMP" = vetor_PPMP, "BASE" = vetor_BASE)
vetor_e <- SerieTemporal_e[[2]]
vetor_d <- SerieTemporal_d[[2]]
vetor_multiplicador <- Multiplicador_mon[[1]]
TabelaBacen <- TabelaBacen %>%
add_column(e = vetor_e, d = vetor_d, alpha = vetor_multiplicador, .after = "Reservas Bancarias")
ggplot(data = SerieTemporal_e) +
aes(x = data, y = valor) +
geom_line(colour = "red") +
labs(x = "Data", y = "Coeficiente 'e'") +
geom_point(colour = "black")
ggplot(data = SerieTemporal_d) +
aes(x = data, y = valor) +
geom_line(colour = "blue") +
labs(x = "Data", y = "Coeficiente 'd'") +
geom_point(colour = "black")
ggplot(data = Coeficientes) +
aes(x = data, y = Valor_de_e, color = "Valor_de_e") +
geom_line() +
geom_line(aes(y = Valor_de_d, color = "Valor_de_d")) +
labs(x = "Data", y = "Valores dos coeficientes") +
scale_color_manual(values = c("Valor_de_e" = "red", "Valor_de_d" = "blue"))
ggplot(data = SerieTemporal_alpha, aes( x = data, y = valor)) +
geom_line(colour = "purple") +
labs(x = "Data", y = "Coeficiente 'e'") +
geom_point(colour = "black")
View(Multiplicador_mon)
vetor_e <- SerieTemporal_e[[2]]
vetor_d <- SerieTemporal_d[[2]]
vetor_multiplicador <- Multiplicador_mon[[,1]]
vetor_e <- SerieTemporal_e[[2]]
vetor_d <- SerieTemporal_d[[2]]
vetor_multiplicador <- Multiplicador_mon
TabelaBacen <- TabelaBacen %>%
add_column(e = vetor_e, d = vetor_d, alpha = vetor_multiplicador, .after = "Reservas Bancarias")
vetor_e <- SerieTemporal_e[[2]]
vetor_d <- SerieTemporal_d[[2]]
vetor_multiplicador <- Multiplicador_mon
TabelaBacen <- TabelaBacen %>%
add_column(e = vetor_e, d = vetor_d, alpha = vetor_multiplicador, .after = "Reservas Bancarias")
View(TabelaBacen)
### Criando um vetor para ser a coluna de tempo
dates <- seq.Date(from = as.Date("2003-01-01"), to = as.Date("2023-12-01"), by = "month")
#criando vetores para cada valor do MP, DV, ResBan, PPMP e BASE MONETARIA
vetormp <- TabelaMP[[2]]
vetordepavi <- TabelaDepAvi[[2]]
vetorresban <- TabelaResBan[[2]]
vetorPPMP <- TabelaPMPP[[2]]
vetorBASE <- TabelaBASE[[2]]
#formatando os vetores
vetor_mp <- format(vetormp, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_depavi <- format(vetordepavi, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_resban <- format(vetorresban, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_PPMP <- format(vetorPPMP, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_BASE <- format(vetorBASE, big.mark = ".", decimal.mark = ",", scientific = FALSE)
### juntando todas as variáveis em uma tabela só
TabelaBacen <- tibble(Data = dates, "Meios de Pagamentos" = vetor_mp,
"Depísitos à vista" = vetor_depavi, vetor_resban = "Reservas Bancarias")
vetor_e <- SerieTemporal_e[[2]]
vetor_d <- SerieTemporal_d[[2]]
vetor_multiplicador <- Multiplicador_mon
TabelaBacen <- TabelaBacen %>%
add_column(e = vetor_e, d = vetor_d, alpha = vetor_multiplicador, .after = "Reservas Bancarias")
View(TabelaBacen)
### Criando um vetor para ser a coluna de tempo
dates <- seq.Date(from = as.Date("2003-01-01"), to = as.Date("2023-12-01"), by = "month")
#criando vetores para cada valor do MP, DV, ResBan, PPMP e BASE MONETARIA
vetormp <- TabelaMP[[2]]
vetordepavi <- TabelaDepAvi[[2]]
vetorresban <- TabelaResBan[[2]]
vetorPPMP <- TabelaPMPP[[2]]
vetorBASE <- TabelaBASE[[2]]
#formatando os vetores
vetor_mp <- format(vetormp, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_depavi <- format(vetordepavi, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_resban <- format(vetorresban, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_PPMP <- format(vetorPPMP, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_BASE <- format(vetorBASE, big.mark = ".", decimal.mark = ",", scientific = FALSE)
### juntando todas as variáveis em uma tabela só
TabelaBacen <- tibble(Data = dates, "Meios de Pagamentos" = vetor_mp,
"Depósitos à vista" = vetor_depavi, vetor_resban = "Reservas Bancarias")
### Criando um vetor para ser a coluna de tempo
dates <- seq.Date(from = as.Date("2003-01-01"), to = as.Date("2023-12-01"), by = "month")
#criando vetores para cada valor do MP, DV, ResBan, PPMP e BASE MONETARIA
vetormp <- TabelaMP[[2]]
vetordepavi <- TabelaDepAvi[[2]]
vetorresban <- TabelaResBan[[2]]
vetorPPMP <- TabelaPMPP[[2]]
vetorBASE <- TabelaBASE[[2]]
#formatando os vetores
vetor_mp <- format(vetormp, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_depavi <- format(vetordepavi, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_resban <- format(vetorresban, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_PPMP <- format(vetorPPMP, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_BASE <- format(vetorBASE, big.mark = ".", decimal.mark = ",", scientific = FALSE)
### juntando todas as variáveis em uma tabela só
TabelaBacen <- tibble(Data = dates, "Meios de Pagamentos" = vetor_mp,
"Depósitos à vista" = vetor_depavi, "Reservas Bancárias" = vetor_resban)
vetor_e <- SerieTemporal_e[[2]]
vetor_d <- SerieTemporal_d[[2]]
vetor_multiplicador <- Multiplicador_mon
TabelaBacen <- TabelaBacen %>%
add_column(e = vetor_e, d = vetor_d, alpha = vetor_multiplicador, .after = "Reservas Bancarias")
vetor_e <- SerieTemporal_e[[2]]
vetor_d <- SerieTemporal_d[[2]]
vetor_multiplicador <- Multiplicador_mon
TabelaBacen <- TabelaBacen %>%
add_column(e = vetor_e, d = vetor_d, alpha = vetor_multiplicador, .after = "Reservas Bancárias")
kable(TabelaBacen, format = "latex", longtable = TRUE, booktabs = TRUE, caption = "Valores das Variáveis no Tempo") %>%
kable_styling(latex_options = c("striped", "scale_down"), full_width = FALSE, font_size = 10)
### Criando um vetor para ser a coluna de tempo
dates <- seq.Date(from = as.Date("2003-01-01"), to = as.Date("2023-12-01"), by = "month")
#criando vetores para cada valor do MP, DV, ResBan, PPMP e BASE MONETARIA
vetormp <- TabelaMP[[2]]
vetordepavi <- TabelaDepAvi[[2]]
vetorresban <- TabelaResBan[[2]]
vetorPPMP <- TabelaPMPP[[2]]
vetorBASE <- TabelaBASE[[2]]
#formatando os vetores
vetor_mp <- format(vetormp, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_depavi <- format(vetordepavi, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_resban <- format(vetorresban, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_PPMP <- format(vetorPPMP, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_BASE <- format(vetorBASE, big.mark = ".", decimal.mark = ",", scientific = FALSE)
### juntando todas as variáveis em uma tabela só
TabelaBacen <- tibble(Data = dates, "Meios de Pagamentos" = vetor_mp,
"Depositos a vista" = vetor_depavi, "Reservas Bancarias" = vetor_resban)
#criação das séries temporais
###sABEMOS QUE B = PMPP + ENCAIXES TOTAIS / LOGO ENCAIXES TOTAIS = B - PMPP
#criando uma tabela com os encaixes técnicos
# Criando função para realizar o cálculo do coeficiente
X <- function(x,y){
Resultado = x/y
return(Resultado)
}
Coeficiente_e <- mapply(X, TabelaResBan[,2], TabelaDepAvi[,2])
Coeficiente_d <- mapply(X, TabelaDepAvi[,2], TabelaMP[,2])
SerieTemporal_e <- tibble(data = dates, valor = Coeficiente_e)
SerieTemporal_d <- tibble(data = dates, valor = Coeficiente_d)
y <- function(d,e){
Resultado = 1/(1-d * (1-e))
return(Resultado)
}
Coeficientes <- tibble(data = dates, Valor_de_e = Coeficiente_e, Valor_de_d = Coeficiente_d)
Multiplicador_mon <- mapply(y, Coeficientes[,3], Coeficientes[,2])
SerieTemporal_alpha <- tibble(data = dates, valor = Multiplicador_mon)
vetor_e <- SerieTemporal_e[[2]]
vetor_d <- SerieTemporal_d[[2]]
vetor_multiplicador <- Multiplicador_mon
TabelaBacen <- TabelaBacen %>%
add_column(e = vetor_e, d = vetor_d, alpha = vetor_multiplicador, .after = "Reservas Bancárias")
vetor_e <- SerieTemporal_e[[2]]
vetor_d <- SerieTemporal_d[[2]]
vetor_multiplicador <- Multiplicador_mon
TabelaBacen <- TabelaBacen %>%
add_column(e = vetor_e, d = vetor_d, alpha = vetor_multiplicador, .after = "Reservas Bancarias")
kable(TabelaBacen, format = "latex", longtable = TRUE, booktabs = TRUE, caption = "Valores das Variáveis no Tempo") %>%
kable_styling(latex_options = c("striped", "scale_down"), full_width = FALSE, font_size = 10)
View(Multiplicador_mon)
View(vetor_multiplicador)
vetor_e <- SerieTemporal_e[[2]]
vetor_d <- SerieTemporal_d[[2]]
vetor_multiplicador <- Multiplicador_mon
TabelaBacen <- TabelaBacen %>%
add_column(e = vetor_e, d = vetor_d, alpha = Multiplicador_mon, .after = "Reservas Bancarias")
### Criando um vetor para ser a coluna de tempo
dates <- seq.Date(from = as.Date("2003-01-01"), to = as.Date("2023-12-01"), by = "month")
#criando vetores para cada valor do MP, DV, ResBan, PPMP e BASE MONETARIA
vetormp <- TabelaMP[[2]]
vetordepavi <- TabelaDepAvi[[2]]
vetorresban <- TabelaResBan[[2]]
vetorPPMP <- TabelaPMPP[[2]]
vetorBASE <- TabelaBASE[[2]]
#formatando os vetores
vetor_mp <- format(vetormp, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_depavi <- format(vetordepavi, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_resban <- format(vetorresban, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_PPMP <- format(vetorPPMP, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_BASE <- format(vetorBASE, big.mark = ".", decimal.mark = ",", scientific = FALSE)
### juntando todas as variáveis em uma tabela só
TabelaBacen <- tibble(Data = dates, "Meios de Pagamentos" = vetor_mp,
"Depositos a vista" = vetor_depavi, "Reservas Bancarias" = vetor_resban)
vetor_e <- SerieTemporal_e[[2]]
vetor_d <- SerieTemporal_d[[2]]
vetor_multiplicador <- Multiplicador_mon
TabelaBacen <- TabelaBacen %>%
add_column(e = vetor_e, d = vetor_d, alpha = Multiplicador_mon, .after = "Reservas Bancarias")
kable(TabelaBacen, format = "latex", longtable = TRUE, booktabs = TRUE, caption = "Valores das Variáveis no Tempo") %>%
kable_styling(latex_options = c("striped", "scale_down"), full_width = FALSE, font_size = 10)
vetor_e <- SerieTemporal_e[[2]]
vetor_d <- SerieTemporal_d[[2]]
vetor_multiplicador <- Multiplicador_mon
TabelaBacen <- TabelaBacen %>%
add_column(e = vetor_e, d = vetor_d, alpha = vetor_multiplicador, .after = "Reservas Bancarias")
### Criando um vetor para ser a coluna de tempo
dates <- seq.Date(from = as.Date("2003-01-01"), to = as.Date("2023-12-01"), by = "month")
#criando vetores para cada valor do MP, DV, ResBan, PPMP e BASE MONETARIA
vetormp <- TabelaMP[[2]]
vetordepavi <- TabelaDepAvi[[2]]
vetorresban <- TabelaResBan[[2]]
vetorPPMP <- TabelaPMPP[[2]]
vetorBASE <- TabelaBASE[[2]]
#formatando os vetores
vetor_mp <- format(vetormp, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_depavi <- format(vetordepavi, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_resban <- format(vetorresban, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_PPMP <- format(vetorPPMP, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_BASE <- format(vetorBASE, big.mark = ".", decimal.mark = ",", scientific = FALSE)
### juntando todas as variáveis em uma tabela só
TabelaBacen <- tibble(Data = dates, "Meios de Pagamentos" = vetor_mp,
"Depositos a vista" = vetor_depavi, "Reservas Bancarias" = vetor_resban)
vetor_e <- SerieTemporal_e[[2]]
vetor_d <- SerieTemporal_d[[2]]
vetor_multiplicador <- Multiplicador_mon
TabelaBacen <- TabelaBacen %>%
add_column(e = vetor_e, d = vetor_d, alpha = vetor_multiplicador, .after = "Reservas Bancarias")
kable(TabelaBacen, format = "latex", longtable = TRUE, booktabs = TRUE, caption = "Valores das Variáveis no Tempo") %>%
kable_styling(latex_options = c("striped", "scale_down"), full_width = FALSE, font_size = 10)
class(vetor_multiplicador)
class(vetor_multiplicador)
vetor_multiplicador$Valor_d <- as.numeric(as.character(vetor_multiplicador$Valor_d))
vetor_e <- SerieTemporal_e[[2]]
vetor_d <- SerieTemporal_d[[2]]
vetor_multiplicador <- Multiplicador_mon
class(vetor_multiplicador)
TabelaBacen <- TabelaBacen %>%
add_column(e = vetor_e, d = vetor_d, alpha = vetor_multiplicador, .after = "Reservas Bancarias")
vetor_e <- SerieTemporal_e[[2]]
vetor_d <- SerieTemporal_d[[2]]
vetor_multiplicador <- Multiplicador_mon
class(vetor_multiplicador)
TabelaBacen <- TabelaBacen %>%
add_column(e = vetor_e, d = vetor_d, alpha = vetor_multiplicador, .after = "Reservas Bancarias")
View(TabelaBacen)
vetor_e <- SerieTemporal_e[[2]]
vetor_d <- SerieTemporal_d[[2]]
vetor_multiplicador <- Multiplicador_mon
class(vetor_multiplicador)
TabelaBacen <- TabelaBacen %>%
add_column(e = vetor_e, d = vetor_d, alpha = vetor_multiplicador, .after = "Reservas Bancarias")
vetor_e <- SerieTemporal_e[[2]]
vetor_d <- SerieTemporal_d[[2]]
vetor_multiplicador <- Multiplicador_mon
class(vetor_multiplicador)
TabelaBacen <- TabelaBacen %>%
add_column(e = vetor_e, d = vetor_d, alpha = vetor_multiplicador, .after = "Reservas Bancarias", .name_repair = "unique")
kable(TabelaBacen, format = "latex", longtable = TRUE, booktabs = TRUE, caption = "Valores das Variáveis no Tempo") %>%
kable_styling(latex_options = c("striped", "scale_down"), full_width = FALSE, font_size = 10)
View(TabelaBacen)
View(TabelaBASE)
View(TabelaPMPP)
View(TabelaDepAvi)
View(TabelaBASE)
Z <- function(s, t){
Resultado = s - t
return(Resultado)
}
Vetor_Encaixe <- mapply(Z, TabelaBASE[[2]}, TabelaPMPP[[2]])
Vetor_Encaixe <- mapply(Z, TabelaBASE[[2]], TabelaPMPP[[2]])
view(Vetor_Encaixe)
View(TabelaBASE)
View(TabelaBASE)
view(Vetor_Encaixe)
### Criando um vetor para ser a coluna de tempo
dates <- seq.Date(from = as.Date("2003-01-01"), to = as.Date("2023-12-01"), by = "month")
#criando vetores para cada valor do MP, DV, ResBan, PPMP e BASE MONETARIA
vetormp <- TabelaMP[[2]]
vetordepavi <- TabelaDepAvi[[2]]
vetorresban <- TabelaResBan[[2]]
vetorPPMP <- TabelaPMPP[[2]]
vetorBASE <- TabelaBASE[[2]]
#formatando os vetores
vetor_mp <- format(vetormp, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_depavi <- format(vetordepavi, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_resban <- format(vetorresban, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_PPMP <- format(vetorPPMP, big.mark = ".", decimal.mark = ",", scientific = FALSE)
vetor_BASE <- format(vetorBASE, big.mark = ".", decimal.mark = ",", scientific = FALSE)
### juntando todas as variáveis em uma tabela só
TabelaBacen <- tibble(Data = dates, "Meios de Pagamentos" = vetor_mp,
"Depositos a vista" = vetor_depavi)
#criação das séries temporais
###SABEMOS QUE B = PMPP + ENCAIXES TOTAIS / LOGO ENCAIXES TOTAIS = B - PMPP
#Função de subtração
Z <- function(s, t){
Resultado = s - t
return(Resultado)
}
#criando uma vetor com os encaixes técnicos
Vetor_Encaixe <- mapply(Z, TabelaBASE[[2]], TabelaPMPP[[2]])
view(Vetor_Encaixe)
### juntando todas as variáveis em uma tabela só
TabelaBacen <- tibble(Data = dates, "Meios de Pagamentos" = vetor_mp,
"Depositos a vista" = vetor_depavi, "Encaixes Tecnicos" = Vetor_Encaixe)
# Criando função para realizar o cálculo do coeficiente
X <- function(x,y){
Resultado = x/y
return(Resultado)
}
Coeficiente_e <- mapply(X, TabelaResBan[,2], TabelaDepAvi[,2])
Coeficiente_d <- mapply(X, TabelaDepAvi[,2], TabelaMP[,2])
SerieTemporal_e <- tibble(data = dates, valor = Coeficiente_e)
SerieTemporal_d <- tibble(data = dates, valor = Coeficiente_d)
y <- function(d,e){
Resultado = 1/(1-d * (1-e))
return(Resultado)
}
Coeficientes <- tibble(data = dates, Valor_de_e = Coeficiente_e, Valor_de_d = Coeficiente_d)
Multiplicador_mon <- mapply(y, Coeficientes[,3], Coeficientes[,2])
SerieTemporal_alpha <- tibble(data = dates, valor = Multiplicador_mon)
#criação das séries temporais
###SABEMOS QUE B = PMPP + ENCAIXES TOTAIS / LOGO ENCAIXES TOTAIS = B - PMPP
#Função de subtração
Z <- function(s, t){
Resultado = s - t
return(Resultado)
}
#criando uma vetor com os encaixes técnicos
Vetor_Encaixe <- mapply(Z, TabelaBASE[[2]], TabelaPMPP[[2]])
#Tabela do vetor de encaxe
TabelaEncaixe <- tibble(Data = dates, Valor = Vetor_Encaixe)
### juntando todas as variáveis em uma tabela só
TabelaBacen <- tibble(Data = dates, "Meios de Pagamentos" = vetor_mp,
"Depositos a vista" = vetor_depavi, "Encaixes Tecnicos" = Vetor_Encaixe)
# Criando função para realizar o cálculo do coeficiente
X <- function(x,y){
Resultado = x/y
return(Resultado)
}
Coeficiente_e <- mapply(X, [,2], TabelaDepAvi[,2])
#criação das séries temporais
###SABEMOS QUE B = PMPP + ENCAIXES TOTAIS / LOGO ENCAIXES TOTAIS = B - PMPP
#Função de subtração
Z <- function(s, t){
Resultado = s - t
return(Resultado)
}
#criando uma vetor com os encaixes técnicos
Vetor_Encaixe <- mapply(Z, TabelaBASE[[2]], TabelaPMPP[[2]])
#Tabela do vetor de encaxe
TabelaEncaixe <- tibble(Data = dates, Valor = Vetor_Encaixe)
### juntando todas as variáveis em uma tabela só
TabelaBacen <- tibble(Data = dates, "Meios de Pagamentos" = vetor_mp,
"Depositos a vista" = vetor_depavi, "Encaixes Tecnicos" = Vetor_Encaixe)
# Criando função para realizar o cálculo do coeficiente
X <- function(x,y){
Resultado = x/y
return(Resultado)
}
Coeficiente_e <- mapply(X, TabelaEncaixe[,2], TabelaDepAvi[,2])
Coeficiente_d <- mapply(X, TabelaDepAvi[,2], TabelaMP[,2])
SerieTemporal_e <- tibble(data = dates, valor = Coeficiente_e)
SerieTemporal_d <- tibble(data = dates, valor = Coeficiente_d)
y <- function(d,e){
Resultado = 1/(1-d * (1-e))
return(Resultado)
}
Coeficientes <- tibble(data = dates, Valor_de_e = Coeficiente_e, Valor_de_d = Coeficiente_d)
Multiplicador_mon <- mapply(y, Coeficientes[,3], Coeficientes[,2])
SerieTemporal_alpha <- tibble(data = dates, valor = Multiplicador_mon)
#criação das séries temporais
###SABEMOS QUE B = PMPP + ENCAIXES TOTAIS / LOGO ENCAIXES TOTAIS = B - PMPP
#Função de subtração
Z <- function(s, t){
Resultado = s - t
return(Resultado)
}
#criando uma vetor com os encaixes técnicos
Vetor_Encaixe <- mapply(Z, TabelaBASE[[2]], TabelaPMPP[[2]])
#Tabela do vetor de encaxe
TabelaEncaixe <- tibble(Data = dates, "Valor" = Vetor_Encaixe)
### juntando todas as variáveis em uma tabela só
TabelaBacen <- tibble(Data = dates, "Meios de Pagamentos" = vetor_mp,
"Depositos a vista" = vetor_depavi, "Encaixes Tecnicos" = Vetor_Encaixe)
# Criando função para realizar o cálculo do coeficiente
X <- function(x,y){
Resultado = x/y
return(Resultado)
}
Coeficiente_e <- mapply(X, TabelaEncaixe[,2], TabelaDepAvi[,2])
Coeficiente_d <- mapply(X, TabelaDepAvi[,2], TabelaMP[,2])
SerieTemporal_e <- tibble(data = dates, valor = Coeficiente_e)
SerieTemporal_d <- tibble(data = dates, valor = Coeficiente_d)
y <- function(d,e){
Resultado = 1/(1-d * (1-e))
return(Resultado)
}
Coeficientes <- tibble(data = dates, Valor_de_e = Coeficiente_e, Valor_de_d = Coeficiente_d)
Multiplicador_mon <- mapply(y, Coeficientes[,3], Coeficientes[,2])
SerieTemporal_alpha <- tibble(data = dates, valor = Multiplicador_mon)
View(Coeficiente_e)
View(TabelaEncaixe)
#criação das séries temporais
###SABEMOS QUE B = PMPP + ENCAIXES TOTAIS / LOGO ENCAIXES TOTAIS = B - PMPP
#Função de subtração
Z <- function(s, t){
Resultado = s - t
return(Resultado)
}
#criando uma vetor com os encaixes técnicos
Vetor_Encaixe <- mapply(Z, TabelaBASE[[2]], TabelaPMPP[[2]])
#Tabela do vetor de encaxe
TabelaEncaixe <- tibble(Data = dates, Valor = Vetor_Encaixe)
### juntando todas as variáveis em uma tabela só
TabelaBacen <- tibble(Data = dates, "Meios de Pagamentos" = vetor_mp,
"Depositos a vista" = vetor_depavi, "Encaixes Tecnicos" = Vetor_Encaixe)
# Criando função para realizar o cálculo do coeficiente
X <- function(x,y){
Resultado = x/y
return(Resultado)
}
Coeficiente_e <- mapply(X, TabelaEncaixe[,2], TabelaDepAvi[,2])
Coeficiente_d <- mapply(X, TabelaDepAvi[,2], TabelaMP[,2])
SerieTemporal_e <- tibble(data = dates, valor = Coeficiente_e)
SerieTemporal_d <- tibble(data = dates, valor = Coeficiente_d)
y <- function(d,e){
Resultado = 1/(1-d * (1-e))
return(Resultado)
}
Coeficientes <- tibble(data = dates, Valor_de_e = Coeficiente_e, Valor_de_d = Coeficiente_d)
Multiplicador_mon <- mapply(y, Coeficientes[,3], Coeficientes[,2])
SerieTemporal_alpha <- tibble(data = dates, valor = Multiplicador_mon)
View(Coeficientes)
View(SerieTemporal_e)
View(TabelaEncaixe)
View(TabelaBacen)
View(Coeficiente_e)
view(Coeficiente_d)
View(TabelaEncaixe)
View(TabelaDepAvi)
#criação das séries temporais
###SABEMOS QUE B = PMPP + ENCAIXES TOTAIS / LOGO ENCAIXES TOTAIS = B - PMPP
#Função de subtração
Z <- function(s, t){
Resultado = s - t
return(Resultado)
}
#criando uma vetor com os encaixes técnicos
Vetor_Encaixe <- mapply(Z, TabelaBASE[[2]], TabelaPMPP[[2]])
#Tabela do vetor de encaxe
TabelaEncaixe <- tibble(Data = dates, Valor = Vetor_Encaixe)
### juntando todas as variáveis em uma tabela só
TabelaBacen <- tibble(Data = dates, "Meios de Pagamentos" = vetor_mp,
"Depositos a vista" = vetor_depavi, "Encaixes Tecnicos" = Vetor_Encaixe)
# Criando função para realizar o cálculo do coeficiente
X <- function(x,y){
Resultado = x/y
return(Resultado)
}
Coeficiente_e <- mapply(X, TabelaEncaixe[[2]], TabelaDepAvi[[2]])
Coeficiente_d <- mapply(X, TabelaDepAvi[,2], TabelaMP[,2])
view(Coeficiente_d)
SerieTemporal_e <- tibble(data = dates, valor = Coeficiente_e)
SerieTemporal_d <- tibble(data = dates, valor = Coeficiente_d)
y <- function(d,e){
Resultado = 1/(1-d * (1-e))
return(Resultado)
}
Coeficientes <- tibble(data = dates, Valor_de_e = Coeficiente_e, Valor_de_d = Coeficiente_d)
Multiplicador_mon <- mapply(y, Coeficientes[,3], Coeficientes[,2])
SerieTemporal_alpha <- tibble(data = dates, valor = Multiplicador_mon)
#criação das séries temporais
###SABEMOS QUE B = PMPP + ENCAIXES TOTAIS / LOGO ENCAIXES TOTAIS = B - PMPP
#Função de subtração
Z <- function(s, t){
Resultado = s - t
return(Resultado)
}
#criando uma vetor com os encaixes técnicos
Vetor_Encaixe <- mapply(Z, TabelaBASE[[2]], TabelaPMPP[[2]])
#Tabela do vetor de encaxe
TabelaEncaixe <- tibble(Data = dates, Valor = Vetor_Encaixe)
### juntando todas as variáveis em uma tabela só
TabelaBacen <- tibble(Data = dates, "Meios de Pagamentos" = vetor_mp,
"Depositos a vista" = vetor_depavi, "Encaixes Tecnicos" = Vetor_Encaixe)
# Criando função para realizar o cálculo do coeficiente
X <- function(x,y){
Resultado = x/y
return(Resultado)
}
Coeficiente_e <- mapply(X, TabelaEncaixe[[2]], TabelaDepAvi[[2]])
Coeficiente_d <- mapply(X, TabelaDepAvi[,2], TabelaMP[,2])
SerieTemporal_e <- tibble(data = dates, valor = Coeficiente_e)
SerieTemporal_d <- tibble(data = dates, valor = Coeficiente_d)
y <- function(d,e){
Resultado = 1/(1-d * (1-e))
return(Resultado)
}
Coeficientes <- tibble(data = dates, Valor_de_e = Coeficiente_e, Valor_de_d = Coeficiente_d)
Multiplicador_mon <- mapply(y, Coeficientes[,3], Coeficientes[,2])
SerieTemporal_alpha <- tibble(data = dates, valor = Multiplicador_mon)
